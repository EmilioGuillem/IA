import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import PolynomialFeatures

data = load_diabetes()

# print(data.data)
# print(data.feature_names)
# print(data.DESCR)
# print(data.target)


df = pd.DataFrame(data.data, columns=data.feature_names)
# print(df.head())
df['target'] = data.target
# print(df.head())

# print(df.info())
# print(df.isnull().sum())
X = df.iloc[:,:10]
# print(X)
Y= df['target']

x_train, x_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3)

# print(x_train.shape, Y_train.shape)
# print(x_test.shape, Y_test.shape)

model = LinearRegression()
model.fit(x_train, Y_train)

predict = model.predict(x_test)
print('R-Squared Linear: %.4f' % model.score(x_test, Y_test))

degree = 4
polynominal_features = PolynomialFeatures(degree=degree)
x_poly = polynominal_features.fit_transform(X)

model.fit(x_poly, Y)

print('R-Squared Polynominal: %.4f' % model.score(x_poly, Y))
# mse = mean_squared_error(Y_test, predict)
# print(mse)